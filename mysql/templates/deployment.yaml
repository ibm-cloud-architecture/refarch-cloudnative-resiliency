apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: {{ template "mysql.fullname" . }}
  labels:
    app: {{ template "mysql.fullname" . }}
    chart: "{{ .Chart.Name }}-{{ .Chart.Version }}"
    release: "{{ .Release.Name }}"
    heritage: "{{ .Release.Service }}"
spec:
  template:
    metadata:
      labels:
        app: {{ template "mysql.fullname" . }}
    spec:
      initContainers:
      - name: "remove-lost-found"
        image: "{{ template "busyBoxDockerImage" . }}:{{ .Values.busybox.image.tag }}"
        imagePullPolicy: {{ .Values.busybox.image.pullPolicy | quote }}
        command:  ["rm", "-fr", "/var/lib/mysql/lost+found"]
        volumeMounts:
        - name: data
          mountPath: /var/lib/mysql
      containers:
      - name: {{ template "mysql.fullname" . }}
        image: "{{ template "mySQLDockerImage" . }}:{{ .Values.image.tag }}"
        imagePullPolicy: {{ .Values.image.pullPolicy | quote }}
        resources:
{{ toYaml .Values.resources | indent 10 }}
        env:
          - name: MYSQL_DATABASE
            value: {{ .Values.dbname | quote }}
          - name: MYSQL_USER
            valueFrom:
              secretKeyRef:
                name: {{ .Values.binding.name }}
                key:  mysql-user
          - name: MYSQL_PASSWORD
            valueFrom:
              secretKeyRef:
                name: {{ .Values.binding.name }}
                key:  mysql-password
          - name: MYSQL_ROOT_PASSWORD
            valueFrom:
              secretKeyRef:
                name: {{ .Values.binding.name }}
                key:  mysql-root-password
          - name: MYSQL_ALLOW_EMPTY_PASSWORD
            value: "false"
          - name: SERVER_ID
            value: {{ .Values.server_id | quote }}
          - name: MAX_SERVER_ID
            value: {{ .Values.max_servers | quote }}
        ports:
        - name: mysql
          containerPort: 3306
        livenessProbe:
          exec:
            command:
            - sh
            - -c
            - "mysqladmin ping -u root -p${MYSQL_ROOT_PASSWORD}"
          initialDelaySeconds: 30
          periodSeconds: 10
          timeoutSeconds: 5
          successThreshold: 1
          failureThreshold: 12
        readinessProbe:
          exec:
            command:
            - sh
            - -c
            - "mysqladmin ping -u root -p${MYSQL_ROOT_PASSWORD}"
          initialDelaySeconds: 5
          periodSeconds: 10
          timeoutSeconds: 1
          successThreshold: 1
          failureThreshold: 30
        volumeMounts:
        - name: data
          mountPath: /var/lib/mysql
      volumes:
        {{ template "mysqlDataVolume" . }}
